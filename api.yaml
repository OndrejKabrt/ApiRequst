openapi: 3.0.1
info:
  title: Notes API
  description: API for managing users and notes
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /api/about:
    get:
      summary: Swagger UI Documentation
      operationId: getAbout
      responses:
        '200':
          description: Swagger UI
          content:
            text/html:
              schema:
                type: string
                example: "<html>...</html>"

  /api/notes:
    get:
      summary: Get all notes
      operationId: getNotes
      responses:
        '200':
          description: A list of notes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    user_id:
                      type: integer
                    title:
                      type: string
                    contents:
                      type: string

    post:
      summary: Create a new note
      operationId: createNote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                title:
                  type: string
                contents:
                  type: string
      responses:
        '201':
          description: Note created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  title:
                    type: string
                  contents:
                    type: string

  /api/note/{id}:
    get:
      summary: Get a single note by ID
      operationId: getNoteById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A single note
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  title:
                    type: string
                  contents:
                    type: string
        '404':
          description: Note not found

  /api/note/{title}:
    get:
      summary: Get a note by title
      operationId: getNoteByTitle
      parameters:
        - in: path
          name: title
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single note
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  title:
                    type: string
                  contents:
                    type: string
        '404':
          description: Note not found

  /api/users:
    get:
      summary: Get a list of all users
      operationId: getUsers
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    password:
                      type: string

    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  password:
                    type: string

  /api/user/{id}:
    get:
      summary: Get a user by ID
      operationId: getUserById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A single user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  password:
                    type: string
        '404':
          description: User not found

  /api/post/{id}:
    delete:
      summary: Delete a note by ID
      operationId: deleteNote
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Note deleted successfully
        '404':
          description: Note not found
        '403':
          description: Not allowed to delete this note

  /api/post:
    patch:
      summary: Update a note by ID
      operationId: updateNote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                content:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Note updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  title:
                    type: string
                  contents:
                    type: string
        '404':
          description: Note not found

  /api/user:
    patch:
      summary: Update a user by ID
      operationId: updateUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                username:
                  type: string
                old_username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  password:
                    type: string
        '404':
          description: User not found

components:
  schemas:
    Note:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        title:
          type: string
        contents:
          type: string

    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        password:
          type: string
